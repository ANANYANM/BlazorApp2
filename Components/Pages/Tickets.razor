@page "/tickets"
@using BlazorApp2.Models
@using BlazorApp2.Services
@using Microsoft.AspNetCore.Authorization
@inject TicketService TicketService
@inject NavigationManager NavigationManager

<h3>Create Ticket</h3>

<div>
    <label>Ticket ID:</label>
    <input type="Number" @bind="newTicket.TicketId" />
</div>
<div>
    <label>Title:</label>
    <input type="Text" @bind="newTicket.Title" />
</div>
<div>
    <label>Customer Name:</label>
    <input type="Text" @bind="newTicket.CustomerName" />
</div>
<div>
    <label>Issue:</label>
    <input type="Text" @bind="newTicket.Issue" />
</div>
<div>
    <label>Company Name:</label>
    <input type="Text" @bind="newTicket.CompanyName" />
</div>
<div>
    <label>Issue Category:</label>
    <input type="Text" @bind="newTicket.IssueCategory" />
</div>
<div>
    <label>Description:</label>
    <TextArea @bind="newTicket.Description"></TextArea>
</div>

<button type="submit" class="btn btn-primary" @onclick="CreateTicket">Submit</button>

@if (!string.IsNullOrEmpty(errorMessage))
{
    <p class="text-danger">@errorMessage</p>
}
@code {
    private Ticket newTicket = new Ticket();
    private List<Ticket> tickets = new List<Ticket>();
    private string errorMessage;
    private string username;
    private string password;

    protected override async Task OnInitializedAsync()
    {

        if (GlobalVariables.isCustomer == true)
        {
            // Proceed with creating the ticket
            CreateTicket();
            tickets = TicketService.GetTickets();
        }
        else
        {
            NavigationManager.NavigateTo("/customer-login");
        }
    }
    private void CreateTicket()
    {
        try{
            TicketService.AddTicket(newTicket);
            tickets = TicketService.GetTickets(); // Refresh the ticket list
            newTicket = new Ticket(); // Reset the form
        }
        catch(Exception ex)
        {
            errorMessage = "An error occurred while creating the ticket: " + ex.Message;
        }
    }
}

